before_script:

after_script:
    - rm /tmp/$CI_PIPELINE_ID.json

stages:
  - build
  - test
  - report
  - deploy

frontend_prod_build:
  tags:
    - qdacity
  stage: build
  environment: Production
  only:
    - master
  cache:
    key: "node_modules"
    untracked: true
    paths:
    - war/node_modules/
  artifacts:
    paths:
      - war/dist/
      - war/*.jsp
    expire_in: 3 mos
  script:
    - cd war
    - echo $API_CONFIG_PRODUCTION > ./api_config.json
    - rm -f ./dist/js/*
    - npm prune
    - npm install 
    - gulp bundle
    - gulp minify
    - gulp set-react-production

backend_prod_build:
  tags:
    - qdacity
  stage: build
  environment: Production
  only:
    - master
  artifacts:
    paths:
      - war/WEB-INF/classes
    expire_in: 3 mos
  script:
    - mvn clean package

rtcsvc_prod_build:
  tags:
    - qdacity
  stage: build
  environment: Production
  only:
    - master
  cache:
    key: "rtcsvc:node_modules"
    untracked: true
    paths:
    - realtime-service/node_modules/
  artifacts:
    paths:
      - realtime-service/
    expire_in: 1 week
  script:
    - cd realtime-service
    - npm install

backend_prod_unittest:
  tags:
    - qdacity
  stage: test
  environment: Production
  only:
    - master
  artifacts:
    paths:
      - target/site/jacoco-ut
    expire_in: 6 mos
  script:
    - mvn test
    - awk -F"," '{ lines += $8 + $9; covered += $9 } END { print covered, "/", lines, " lines covered"; print 100*covered/lines, "% covered" }' target/site/jacoco-ut/jacoco.csv
  dependencies:
    - backend_prod_build

frontend_prod_unittest:
  tags:
    - qdacity
  stage: test
  environment: Production
  only:
    - master
  cache:
    key: "node_modules"
    untracked: true
    paths:
    - war/node_modules/
    policy: pull
  artifacts:
    paths:
      - war/coverage
    expire_in: 6 mos
  script:
    - export DISPLAY=:10
    - cd war
    - ./node_modules/karma/bin/karma start --single-run
  dependencies:
    - frontend_prod_build

rtcsvc_prod_unittest:
  tags:
    - qdacity
  stage: test
  environment: Production
  only:
    - master
  cache:
    key: "rtcsvc:node_modules"
    untracked: true
    paths:
    - realtime-service/node_modules/
    policy: pull
  artifacts:
    paths:
      - realtime-service/coverage
    expire_in: 1 mo
  script:
    - cd realtime-service
    - echo $RTCSVC_ENV | sed -e 's/\r/\n/g' > .env
    - npm run test
  dependencies:
    - rtcsvc_prod_build

# Does not work yet, with gitlab pages not installed
pages:
  tags:
    - qdacity
  stage: report
  dependencies:
    - backend_prod_unittest
  script:
    - mv target/site/jacoco-ut/ public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master

deploy_prod:
  tags:
    - qdacity
  stage: deploy
  environment: Production
  only:
    - master
  script:
    - echo $DEPLOY_KEY_FILE_PRODUCTION > /tmp/$CI_PIPELINE_ID.json
    - WAR=$(pwd)/target/qdacity-war
    - appcfg.sh --enable_jar_splitting  --enable_jar_classes --noisy --service_account_json_key_file=/tmp/$CI_PIPELINE_ID.json update $WAR

deploy_rtcsvc:
  tags:
    - qdacity
  stage: deploy
  environment: Production
  only:
    - master
  allow_failure: true
  script:
    - cd realtime-service
    - echo $DEPLOY_KEY_FILE_PRODUCTION > /tmp/$CI_PIPELINE_ID.json
    - echo $RTCSVC_ENV | sed -e 's/\r/\n/g' > .env
    - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
    - "echo \"--project: $PROJECT_ID_PRODUCTION\""
    - "echo \"--version: $(cat .gae_version)\""
    - gcloud --quiet --project=$PROJECT_ID_PRODUCTION app deploy --version=$(cat .gae_version) app.yaml

